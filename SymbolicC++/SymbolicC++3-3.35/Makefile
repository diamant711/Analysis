# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/symbolicc--
pkgincludedir = $(includedir)/symbolicc--
pkglibdir = $(libdir)/symbolicc--
pkglibexecdir = $(libexecdir)/symbolicc--
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = .
DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(symbolic_HEADERS) $(top_srcdir)/configure AUTHORS COPYING \
	ChangeLog INSTALL NEWS config.guess config.sub depcomp \
	install-sh ltmain.sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(symbolicdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libsymbolicc___la_LIBADD =
am_libsymbolicc___la_OBJECTS = libsymbolicc___la-array.lo \
	libsymbolicc___la-cloning.lo libsymbolicc___la-derive.lo \
	libsymbolicc___la-identity.lo libsymbolicc___la-matnorm.lo \
	libsymbolicc___la-matrix.lo libsymbolicc___la-multinomial.lo \
	libsymbolicc___la-polynomial.lo libsymbolicc___la-quatern.lo \
	libsymbolicc___la-rational.lo libsymbolicc___la-vecnorm.lo \
	libsymbolicc___la-vector.lo libsymbolicc___la-verylong.lo \
	libsymbolicc___la-constants.lo libsymbolicc___la-equation.lo \
	libsymbolicc___la-functions.lo libsymbolicc___la-integrate.lo \
	libsymbolicc___la-number.lo libsymbolicc___la-product.lo \
	libsymbolicc___la-solve.lo libsymbolicc___la-sum.lo \
	libsymbolicc___la-symbol.lo libsymbolicc___la-symbolic.lo \
	libsymbolicc___la-symbolicc++.lo libsymbolicc___la-symerror.lo \
	libsymbolicc___la-symmatrix.lo
libsymbolicc___la_OBJECTS = $(am_libsymbolicc___la_OBJECTS)
libsymbolicc___la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) \
	$(libsymbolicc___la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libsymbolicc___la_SOURCES)
DIST_SOURCES = $(libsymbolicc___la_SOURCES)
HEADERS = $(include_HEADERS) $(symbolic_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35/missing --run autoconf
AUTOHEADER = ${SHELL} /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35/missing --run autoheader
AUTOMAKE = ${SHELL} /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -fno-elide-constructors
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"symbolicc++\" -DPACKAGE_TARNAME=\"symbolicc--\" -DPACKAGE_VERSION=\"3:35\" -DPACKAGE_STRING=\"symbolicc++\ 3:35\" -DPACKAGE_BUGREPORT=\"yhardy@uj.ac.za\" -DPACKAGE_URL=\"\" -DPACKAGE=\"symbolicc--\" -DVERSION=\"3:35\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\"
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35/missing --run makeinfo
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = symbolicc--
PACKAGE_BUGREPORT = yhardy@uj.ac.za
PACKAGE_NAME = symbolicc++
PACKAGE_STRING = symbolicc++ 3:35
PACKAGE_TARNAME = symbolicc--
PACKAGE_URL = 
PACKAGE_VERSION = 3:35
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 3:35
abs_builddir = /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35
abs_srcdir = /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35
abs_top_builddir = /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35
abs_top_srcdir = /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/diamant/Progetti/analysis/SymbolicC++/SymbolicC++3-3.35/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
ACLOCAL_AMFLAGS = -I m4
lib_LTLIBRARIES = libsymbolicc++.la
libsymbolicc___la_CXXFLAGS = -I include $(AM_CXXFLAGS)
libsymbolicc___la_LDFLAGS = -version-info $(PACKAGE_VERSION) $(AM_LDFLAGS)
symbolicdir = $(includedir)/symbolic
include_HEADERS = \
 include/array.h include/cloning.h include/derive.h include/identity.h \
 include/matnorm.h include/matrix.h include/multinomial.h include/polynomial.h \
 include/quatern.h include/rational.h include/symbolicc++.h include/vecnorm.h \
 include/vector.h include/verylong.h

symbolic_HEADERS = \
 include/symbolic/constants.h include/symbolic/equation.h \
 include/symbolic/functions.h include/symbolic/integrate.h \
 include/symbolic/number.h include/symbolic/product.h include/symbolic/solve.h \
 include/symbolic/sum.h include/symbolic/symbol.h include/symbolic/symbolic.h \
 include/symbolic/symbolicc++.h include/symbolic/symerror.h \
 include/symbolic/symmatrix.h

libsymbolicc___la_SOURCES = \
 src/array.cpp src/cloning.cpp src/derive.cpp src/identity.cpp \
 src/matnorm.cpp src/matrix.cpp src/multinomial.cpp src/polynomial.cpp \
 src/quatern.cpp src/rational.cpp src/vecnorm.cpp src/vector.cpp \
 src/verylong.cpp src/constants.cpp src/equation.cpp src/functions.cpp \
 src/integrate.cpp src/number.cpp src/product.cpp src/solve.cpp src/sum.cpp \
 src/symbol.cpp src/symbolic.cpp src/symbolicc++.cpp src/symerror.cpp \
 src/symmatrix.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsymbolicc++.la: $(libsymbolicc___la_OBJECTS) $(libsymbolicc___la_DEPENDENCIES) 
	$(libsymbolicc___la_LINK) -rpath $(libdir) $(libsymbolicc___la_OBJECTS) $(libsymbolicc___la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libsymbolicc___la-array.Plo
include ./$(DEPDIR)/libsymbolicc___la-cloning.Plo
include ./$(DEPDIR)/libsymbolicc___la-constants.Plo
include ./$(DEPDIR)/libsymbolicc___la-derive.Plo
include ./$(DEPDIR)/libsymbolicc___la-equation.Plo
include ./$(DEPDIR)/libsymbolicc___la-functions.Plo
include ./$(DEPDIR)/libsymbolicc___la-identity.Plo
include ./$(DEPDIR)/libsymbolicc___la-integrate.Plo
include ./$(DEPDIR)/libsymbolicc___la-matnorm.Plo
include ./$(DEPDIR)/libsymbolicc___la-matrix.Plo
include ./$(DEPDIR)/libsymbolicc___la-multinomial.Plo
include ./$(DEPDIR)/libsymbolicc___la-number.Plo
include ./$(DEPDIR)/libsymbolicc___la-polynomial.Plo
include ./$(DEPDIR)/libsymbolicc___la-product.Plo
include ./$(DEPDIR)/libsymbolicc___la-quatern.Plo
include ./$(DEPDIR)/libsymbolicc___la-rational.Plo
include ./$(DEPDIR)/libsymbolicc___la-solve.Plo
include ./$(DEPDIR)/libsymbolicc___la-sum.Plo
include ./$(DEPDIR)/libsymbolicc___la-symbol.Plo
include ./$(DEPDIR)/libsymbolicc___la-symbolic.Plo
include ./$(DEPDIR)/libsymbolicc___la-symbolicc++.Plo
include ./$(DEPDIR)/libsymbolicc___la-symerror.Plo
include ./$(DEPDIR)/libsymbolicc___la-symmatrix.Plo
include ./$(DEPDIR)/libsymbolicc___la-vecnorm.Plo
include ./$(DEPDIR)/libsymbolicc___la-vector.Plo
include ./$(DEPDIR)/libsymbolicc___la-verylong.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libsymbolicc___la-array.lo: src/array.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-array.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-array.Tpo -c -o libsymbolicc___la-array.lo `test -f 'src/array.cpp' || echo '$(srcdir)/'`src/array.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-array.Tpo $(DEPDIR)/libsymbolicc___la-array.Plo
#	source='src/array.cpp' object='libsymbolicc___la-array.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-array.lo `test -f 'src/array.cpp' || echo '$(srcdir)/'`src/array.cpp

libsymbolicc___la-cloning.lo: src/cloning.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-cloning.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-cloning.Tpo -c -o libsymbolicc___la-cloning.lo `test -f 'src/cloning.cpp' || echo '$(srcdir)/'`src/cloning.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-cloning.Tpo $(DEPDIR)/libsymbolicc___la-cloning.Plo
#	source='src/cloning.cpp' object='libsymbolicc___la-cloning.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-cloning.lo `test -f 'src/cloning.cpp' || echo '$(srcdir)/'`src/cloning.cpp

libsymbolicc___la-derive.lo: src/derive.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-derive.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-derive.Tpo -c -o libsymbolicc___la-derive.lo `test -f 'src/derive.cpp' || echo '$(srcdir)/'`src/derive.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-derive.Tpo $(DEPDIR)/libsymbolicc___la-derive.Plo
#	source='src/derive.cpp' object='libsymbolicc___la-derive.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-derive.lo `test -f 'src/derive.cpp' || echo '$(srcdir)/'`src/derive.cpp

libsymbolicc___la-identity.lo: src/identity.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-identity.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-identity.Tpo -c -o libsymbolicc___la-identity.lo `test -f 'src/identity.cpp' || echo '$(srcdir)/'`src/identity.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-identity.Tpo $(DEPDIR)/libsymbolicc___la-identity.Plo
#	source='src/identity.cpp' object='libsymbolicc___la-identity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-identity.lo `test -f 'src/identity.cpp' || echo '$(srcdir)/'`src/identity.cpp

libsymbolicc___la-matnorm.lo: src/matnorm.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-matnorm.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-matnorm.Tpo -c -o libsymbolicc___la-matnorm.lo `test -f 'src/matnorm.cpp' || echo '$(srcdir)/'`src/matnorm.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-matnorm.Tpo $(DEPDIR)/libsymbolicc___la-matnorm.Plo
#	source='src/matnorm.cpp' object='libsymbolicc___la-matnorm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-matnorm.lo `test -f 'src/matnorm.cpp' || echo '$(srcdir)/'`src/matnorm.cpp

libsymbolicc___la-matrix.lo: src/matrix.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-matrix.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-matrix.Tpo -c -o libsymbolicc___la-matrix.lo `test -f 'src/matrix.cpp' || echo '$(srcdir)/'`src/matrix.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-matrix.Tpo $(DEPDIR)/libsymbolicc___la-matrix.Plo
#	source='src/matrix.cpp' object='libsymbolicc___la-matrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-matrix.lo `test -f 'src/matrix.cpp' || echo '$(srcdir)/'`src/matrix.cpp

libsymbolicc___la-multinomial.lo: src/multinomial.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-multinomial.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-multinomial.Tpo -c -o libsymbolicc___la-multinomial.lo `test -f 'src/multinomial.cpp' || echo '$(srcdir)/'`src/multinomial.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-multinomial.Tpo $(DEPDIR)/libsymbolicc___la-multinomial.Plo
#	source='src/multinomial.cpp' object='libsymbolicc___la-multinomial.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-multinomial.lo `test -f 'src/multinomial.cpp' || echo '$(srcdir)/'`src/multinomial.cpp

libsymbolicc___la-polynomial.lo: src/polynomial.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-polynomial.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-polynomial.Tpo -c -o libsymbolicc___la-polynomial.lo `test -f 'src/polynomial.cpp' || echo '$(srcdir)/'`src/polynomial.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-polynomial.Tpo $(DEPDIR)/libsymbolicc___la-polynomial.Plo
#	source='src/polynomial.cpp' object='libsymbolicc___la-polynomial.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-polynomial.lo `test -f 'src/polynomial.cpp' || echo '$(srcdir)/'`src/polynomial.cpp

libsymbolicc___la-quatern.lo: src/quatern.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-quatern.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-quatern.Tpo -c -o libsymbolicc___la-quatern.lo `test -f 'src/quatern.cpp' || echo '$(srcdir)/'`src/quatern.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-quatern.Tpo $(DEPDIR)/libsymbolicc___la-quatern.Plo
#	source='src/quatern.cpp' object='libsymbolicc___la-quatern.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-quatern.lo `test -f 'src/quatern.cpp' || echo '$(srcdir)/'`src/quatern.cpp

libsymbolicc___la-rational.lo: src/rational.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-rational.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-rational.Tpo -c -o libsymbolicc___la-rational.lo `test -f 'src/rational.cpp' || echo '$(srcdir)/'`src/rational.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-rational.Tpo $(DEPDIR)/libsymbolicc___la-rational.Plo
#	source='src/rational.cpp' object='libsymbolicc___la-rational.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-rational.lo `test -f 'src/rational.cpp' || echo '$(srcdir)/'`src/rational.cpp

libsymbolicc___la-vecnorm.lo: src/vecnorm.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-vecnorm.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-vecnorm.Tpo -c -o libsymbolicc___la-vecnorm.lo `test -f 'src/vecnorm.cpp' || echo '$(srcdir)/'`src/vecnorm.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-vecnorm.Tpo $(DEPDIR)/libsymbolicc___la-vecnorm.Plo
#	source='src/vecnorm.cpp' object='libsymbolicc___la-vecnorm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-vecnorm.lo `test -f 'src/vecnorm.cpp' || echo '$(srcdir)/'`src/vecnorm.cpp

libsymbolicc___la-vector.lo: src/vector.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-vector.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-vector.Tpo -c -o libsymbolicc___la-vector.lo `test -f 'src/vector.cpp' || echo '$(srcdir)/'`src/vector.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-vector.Tpo $(DEPDIR)/libsymbolicc___la-vector.Plo
#	source='src/vector.cpp' object='libsymbolicc___la-vector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-vector.lo `test -f 'src/vector.cpp' || echo '$(srcdir)/'`src/vector.cpp

libsymbolicc___la-verylong.lo: src/verylong.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-verylong.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-verylong.Tpo -c -o libsymbolicc___la-verylong.lo `test -f 'src/verylong.cpp' || echo '$(srcdir)/'`src/verylong.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-verylong.Tpo $(DEPDIR)/libsymbolicc___la-verylong.Plo
#	source='src/verylong.cpp' object='libsymbolicc___la-verylong.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-verylong.lo `test -f 'src/verylong.cpp' || echo '$(srcdir)/'`src/verylong.cpp

libsymbolicc___la-constants.lo: src/constants.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-constants.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-constants.Tpo -c -o libsymbolicc___la-constants.lo `test -f 'src/constants.cpp' || echo '$(srcdir)/'`src/constants.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-constants.Tpo $(DEPDIR)/libsymbolicc___la-constants.Plo
#	source='src/constants.cpp' object='libsymbolicc___la-constants.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-constants.lo `test -f 'src/constants.cpp' || echo '$(srcdir)/'`src/constants.cpp

libsymbolicc___la-equation.lo: src/equation.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-equation.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-equation.Tpo -c -o libsymbolicc___la-equation.lo `test -f 'src/equation.cpp' || echo '$(srcdir)/'`src/equation.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-equation.Tpo $(DEPDIR)/libsymbolicc___la-equation.Plo
#	source='src/equation.cpp' object='libsymbolicc___la-equation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-equation.lo `test -f 'src/equation.cpp' || echo '$(srcdir)/'`src/equation.cpp

libsymbolicc___la-functions.lo: src/functions.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-functions.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-functions.Tpo -c -o libsymbolicc___la-functions.lo `test -f 'src/functions.cpp' || echo '$(srcdir)/'`src/functions.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-functions.Tpo $(DEPDIR)/libsymbolicc___la-functions.Plo
#	source='src/functions.cpp' object='libsymbolicc___la-functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-functions.lo `test -f 'src/functions.cpp' || echo '$(srcdir)/'`src/functions.cpp

libsymbolicc___la-integrate.lo: src/integrate.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-integrate.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-integrate.Tpo -c -o libsymbolicc___la-integrate.lo `test -f 'src/integrate.cpp' || echo '$(srcdir)/'`src/integrate.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-integrate.Tpo $(DEPDIR)/libsymbolicc___la-integrate.Plo
#	source='src/integrate.cpp' object='libsymbolicc___la-integrate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-integrate.lo `test -f 'src/integrate.cpp' || echo '$(srcdir)/'`src/integrate.cpp

libsymbolicc___la-number.lo: src/number.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-number.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-number.Tpo -c -o libsymbolicc___la-number.lo `test -f 'src/number.cpp' || echo '$(srcdir)/'`src/number.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-number.Tpo $(DEPDIR)/libsymbolicc___la-number.Plo
#	source='src/number.cpp' object='libsymbolicc___la-number.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-number.lo `test -f 'src/number.cpp' || echo '$(srcdir)/'`src/number.cpp

libsymbolicc___la-product.lo: src/product.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-product.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-product.Tpo -c -o libsymbolicc___la-product.lo `test -f 'src/product.cpp' || echo '$(srcdir)/'`src/product.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-product.Tpo $(DEPDIR)/libsymbolicc___la-product.Plo
#	source='src/product.cpp' object='libsymbolicc___la-product.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-product.lo `test -f 'src/product.cpp' || echo '$(srcdir)/'`src/product.cpp

libsymbolicc___la-solve.lo: src/solve.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-solve.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-solve.Tpo -c -o libsymbolicc___la-solve.lo `test -f 'src/solve.cpp' || echo '$(srcdir)/'`src/solve.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-solve.Tpo $(DEPDIR)/libsymbolicc___la-solve.Plo
#	source='src/solve.cpp' object='libsymbolicc___la-solve.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-solve.lo `test -f 'src/solve.cpp' || echo '$(srcdir)/'`src/solve.cpp

libsymbolicc___la-sum.lo: src/sum.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-sum.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-sum.Tpo -c -o libsymbolicc___la-sum.lo `test -f 'src/sum.cpp' || echo '$(srcdir)/'`src/sum.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-sum.Tpo $(DEPDIR)/libsymbolicc___la-sum.Plo
#	source='src/sum.cpp' object='libsymbolicc___la-sum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-sum.lo `test -f 'src/sum.cpp' || echo '$(srcdir)/'`src/sum.cpp

libsymbolicc___la-symbol.lo: src/symbol.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-symbol.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-symbol.Tpo -c -o libsymbolicc___la-symbol.lo `test -f 'src/symbol.cpp' || echo '$(srcdir)/'`src/symbol.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-symbol.Tpo $(DEPDIR)/libsymbolicc___la-symbol.Plo
#	source='src/symbol.cpp' object='libsymbolicc___la-symbol.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-symbol.lo `test -f 'src/symbol.cpp' || echo '$(srcdir)/'`src/symbol.cpp

libsymbolicc___la-symbolic.lo: src/symbolic.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-symbolic.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-symbolic.Tpo -c -o libsymbolicc___la-symbolic.lo `test -f 'src/symbolic.cpp' || echo '$(srcdir)/'`src/symbolic.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-symbolic.Tpo $(DEPDIR)/libsymbolicc___la-symbolic.Plo
#	source='src/symbolic.cpp' object='libsymbolicc___la-symbolic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-symbolic.lo `test -f 'src/symbolic.cpp' || echo '$(srcdir)/'`src/symbolic.cpp

libsymbolicc___la-symbolicc++.lo: src/symbolicc++.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-symbolicc++.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-symbolicc++.Tpo -c -o libsymbolicc___la-symbolicc++.lo `test -f 'src/symbolicc++.cpp' || echo '$(srcdir)/'`src/symbolicc++.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-symbolicc++.Tpo $(DEPDIR)/libsymbolicc___la-symbolicc++.Plo
#	source='src/symbolicc++.cpp' object='libsymbolicc___la-symbolicc++.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-symbolicc++.lo `test -f 'src/symbolicc++.cpp' || echo '$(srcdir)/'`src/symbolicc++.cpp

libsymbolicc___la-symerror.lo: src/symerror.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-symerror.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-symerror.Tpo -c -o libsymbolicc___la-symerror.lo `test -f 'src/symerror.cpp' || echo '$(srcdir)/'`src/symerror.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-symerror.Tpo $(DEPDIR)/libsymbolicc___la-symerror.Plo
#	source='src/symerror.cpp' object='libsymbolicc___la-symerror.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-symerror.lo `test -f 'src/symerror.cpp' || echo '$(srcdir)/'`src/symerror.cpp

libsymbolicc___la-symmatrix.lo: src/symmatrix.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -MT libsymbolicc___la-symmatrix.lo -MD -MP -MF $(DEPDIR)/libsymbolicc___la-symmatrix.Tpo -c -o libsymbolicc___la-symmatrix.lo `test -f 'src/symmatrix.cpp' || echo '$(srcdir)/'`src/symmatrix.cpp
	$(am__mv) $(DEPDIR)/libsymbolicc___la-symmatrix.Tpo $(DEPDIR)/libsymbolicc___la-symmatrix.Plo
#	source='src/symmatrix.cpp' object='libsymbolicc___la-symmatrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsymbolicc___la_CXXFLAGS) $(CXXFLAGS) -c -o libsymbolicc___la-symmatrix.lo `test -f 'src/symmatrix.cpp' || echo '$(srcdir)/'`src/symmatrix.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files
install-symbolicHEADERS: $(symbolic_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(symbolicdir)" || $(MKDIR_P) "$(DESTDIR)$(symbolicdir)"
	@list='$(symbolic_HEADERS)'; test -n "$(symbolicdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(symbolicdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(symbolicdir)" || exit $$?; \
	done

uninstall-symbolicHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(symbolic_HEADERS)'; test -n "$(symbolicdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(symbolicdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(symbolicdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(symbolicdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-includeHEADERS \
	install-symbolicHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-symbolicHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags dist \
	dist-all dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip install-symbolicHEADERS \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-symbolicHEADERS


install-data-local:
	$(MKDIR_P) $(datadir)/doc
	$(INSTALL_DATA) README $(datadir)/doc/README.SymbolicC++
	$(INSTALL_DATA) doc/introsymb.pdf $(datadir)/doc/SymbolicC++.pdf

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
